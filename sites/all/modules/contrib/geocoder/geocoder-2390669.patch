diff -ruN a/geocoder/geocoder.widget.inc b/geocoder/geocoder.widget.inc
--- a/geocoder/geocoder.widget.inc	2014-10-15 08:02:20.000000000 +0100
+++ b/geocoder/geocoder.widget.inc	2014-12-09 12:14:25.000000000 +0000
@@ -423,6 +423,37 @@
 }
 
 /**
+ * Geocoder Widget - Parse an Google Places JS
+ */
+function geocoder_widget_parse_google_places_js($field_item) {
+  $components = json_decode($field_item['address_components']);
+  foreach($components as $component) {
+    $types = $component->types;
+    if($types[0] == 'postal_code') {
+      $field_item['postal_code'] = $component->long_name;
+    }
+
+    if($types[0] == 'administrative_area_level_2') {
+      $field_item['administrative_area_level_2'] = $component->long_name;
+    }
+
+    if($types[0] == 'country') {
+      $field_item['country'] = $component->long_name;
+    }
+  }
+
+  $address = '';
+  if (!empty($field_item['vicinity']))                $address .= $field_item['vicinity'] . ',';
+  if (!empty($field_item['administrative_area_level_2'])) $address .= $field_item['administrative_area_level_2'] . ',';
+  if (!empty($field_item['country']))                 $address .= $field_item['country'] . ',';
+  if (!empty($field_item['postal_code']))             $address .= $field_item['postal_code'] . ',';
+
+  $address = rtrim($address, ', ');
+
+  return $address;
+}
+
+/**
  * Geocoder Widget - Parse a location field
  */
 function geocoder_widget_parse_locationfield($field_item) {

diff -ruN a/geocoder/plugins/geocoder_handler/google.inc b/geocoder/plugins/geocoder_handler/google.inc
--- a/geocoder/plugins/geocoder_handler/google.inc	2014-10-15 08:02:20.000000000 +0100
+++ b/geocoder/plugins/geocoder_handler/google.inc	2014-12-09 12:03:26.000000000 +0000
@@ -13,7 +13,7 @@
   'title' => t("Google Geocoder"),
   'description' => t('Geocodes via google geocoder'),
   'callback' => 'geocoder_google',
-  'field_types' => array('text', 'text_long', 'addressfield', 'location', 'text_with_summary', 'computed', 'taxonomy_term_reference'),
+  'field_types' => array('text', 'text_long', 'addressfield', 'location', 'text_with_summary', 'computed', 'taxonomy_term_reference', 'google_places_js_field'),
   'field_callback' => 'geocoder_google_field',
   'settings_callback' => 'geocoder_google_form',
   'terms_of_service' => 'http://code.google.com/apis/maps/documentation/geocoding/#Limits',
@@ -143,6 +143,10 @@
     $term = taxonomy_term_load($field_item['tid']);
     return geocoder_google($term->name, $options);
   }
+  if ($field['type'] == 'google_places_js_field') {
+    $address = geocoder_widget_parse_google_places_js($field_item);
+    return geocoder_google($address, $options);
+  }
 }
 
 function geocoder_google_form($default_values = array()) {
